import { z } from 'zod';
/* eslint-enable n/no-missing-import */
import { makeRestGetRequest } from '../common/utils.js';
export function getFileTool(server) {
    return server.tool('get-file', 'Returns information about a file, including links to download the file in thumbnail, preview, and original formats.', {
        title: z.string().describe('File title')
    }, {
        title: 'Get file',
        readOnlyHint: true,
        destructiveHint: false
    }, async ({ title }) => handleGetFileTool(title));
}
async function handleGetFileTool(title) {
    let data = null;
    try {
        data = await makeRestGetRequest(`/v1/file/${encodeURIComponent(title)}`);
    }
    catch (error) {
        return {
            content: [
                { type: 'text', text: `Failed to retrieve file data: ${error.message}` }
            ],
            isError: true
        };
    }
    if (data === null) {
        return {
            content: [
                { type: 'text', text: 'Failed to retrieve file data: No data returned from API' }
            ],
            isError: true
        };
    }
    return {
        content: getFileToolResult(data)
    };
}
function getFileToolResult(result) {
    return [
        {
            type: 'text',
            text: [
                `File title: ${result.title}`,
                `File description URL: ${result.file_description_url}`,
                `Latest revision timestamp: ${result.latest.timestamp}`,
                `Latest revision user: ${result.latest.user.name}`,
                `Preferred URL: ${result.preferred.url}`,
                `Original URL: ${result.original.url}`,
                `Thumbnail URL: ${result.thumbnail?.url}`
            ].join('\n')
        }
    ];
}
